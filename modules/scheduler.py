from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime
import logging
import asyncio
import pytz

from modules.database import get_all_users
from modules.telegram import send_message
from modules.lang import get_text

scheduler = BackgroundScheduler()

def send_surprise(user_id, lang):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ—Å—é—Ä–ø—Ä–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    text = get_text("auto_surprise_text", lang) or "üéÅ –í–∞—à –∞–≤—Ç–æ—Å—é—Ä–ø—Ä–∏–∑!"
    asyncio.run(send_message(user_id, text))

def send_daily_surprise():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ—Å—é—Ä–ø—Ä–∏–∑ –≤ 10:00 –ø–æ –∏—Ö –ª–æ–∫–∞–ª—å–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏."""
    users = get_all_users()
    now_utc = datetime.utcnow()

    for user in users:
        user_id = user['user_id']
        lang = user.get('language', 'en')
        user_time_str = user.get('surprise_time')  # —Ñ–æ—Ä–º–∞—Ç "HH:MM"
        if not user_time_str:
            continue
        try:
            user_hour, user_minute = map(int, user_time_str.split(":"))
        except Exception:
            continue

        if now_utc.hour == user_hour and now_utc.minute == user_minute == 0:
            send_surprise(user_id, lang)

def start_scheduler():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω."""
    if not scheduler.running:
        scheduler.add_job(send_daily_surprise, 'interval', minutes=1, timezone=pytz.UTC)
        scheduler.start()
        logging.info("Scheduler started.")
    else:
        logging.info("Scheduler already running. Skipping start.")

def schedule_daily_surprises():
    """–û–±—ë—Ä—Ç–∫–∞ –¥–ª—è app.py."""
    start_scheduler()
