# surprise-ai-bot/app.py
import os
import logging
import asyncio
from fastapi import FastAPI
from modules.telegram import router as telegram_router
from modules.router import router as main_router
from modules.scheduler import start_scheduler
from modules.limits import init_limits_table
from modules.database import init_db
from modules.bot import bot, dp

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

PORT = int(os.getenv("PORT", 8000))
TOKEN = os.getenv("BOT_TOKEN")

if not TOKEN:
    raise RuntimeError("BOT_TOKEN environment variable not set")

app = FastAPI()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ aiogram
dp.include_router(main_router)
dp.include_router(telegram_router)

@app.on_event("startup")
async def on_startup():
    try:
        await init_db()
        await init_limits_table()
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (—Å–æ–∑–¥–∞—ë—Ç –∑–∞–¥–∞—á—É –≤ —Ç–µ–∫—É—â–µ–º event loop)
        loop = asyncio.get_event_loop()
        start_scheduler(loop)
        logging.info("‚úÖ –ë–∞–∑–∞, –ª–∏–º–∏—Ç—ã –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}", exc_info=True)

@app.on_event("shutdown")
async def on_shutdown():
    await bot.session.close()
    logging.info("üîå –°–µ—Å—Å–∏—è Telegram –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞")

@app.get("/")
async def root():
    return {"status": "Surprise Me! –±–æ—Ç –ø—Ä–∞—Ü—é—î ü™Ñ"}

@app.get("/healthz")
async def healthcheck():
    return {"status": "ok"}

async def start_bot():
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ (Long Polling)...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    import uvicorn

    # –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI + –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –æ—Ç–¥–µ–ª—å–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å start_bot() –≤ —Ñ–æ–Ω–µ
    uvicorn.run("app:app", host="0.0.0.0", port=PORT, log_level="info")
