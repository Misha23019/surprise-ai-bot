from flask import Flask, request
import requests
import os
from dotenv import load_dotenv
from apscheduler.schedulers.background import BackgroundScheduler
from pytz import timezone
from timezonefinder import TimezoneFinder
from geopy.geocoders import Nominatim
import random
import json
import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª—é—á–µ–π –∏–∑ .env
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")
if not TELEGRAM_TOKEN or not OPENROUTER_API_KEY:
    raise ValueError("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö API –∫–ª—é—á—ñ–≤!")

TELEGRAM_API_URL = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
OPENROUTER_API_URL = "https://openrouter.ai/api/v1/chat/completions"

app = Flask(__name__)

# –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
geolocator = Nominatim(user_agent="surprise-bot")
tf = TimezoneFinder()

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–∞–º—è—Ç–∏
user_data = {}  # chat_id: {"location": ..., "timezone": ...}

# –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
content_list = [
    "üé¨ –†–∞–Ω–¥–æ–º–Ω–∏–π —Ñ—ñ–ª—å–º",
    "üé∑ –ú—É–∑–∏–∫–∞",
    "üìö –¶–∏—Ç–∞—Ç–∞ –∞–±–æ —É—Ä–∏–≤–æ–∫ –∑ –∫–Ω–∏–≥–∏",
    "üåê –ú–∞–ª–æ–≤—ñ–¥–æ–º–∏–π —Å–∞–π—Ç",
    "üß† –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç",
    "üòÇ –ñ–∞—Ä—Ç / —Ü–∏—Ç–∞—Ç–∞",
    "üïµÔ∏è –ú—ñ—Å—Ç–∏—á–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç",
    "üñºÔ∏è –¢–≤—ñ—Ä –º–∏—Å—Ç–µ—Ü—Ç–≤–∞ –∑ –æ–ø–∏—Å–æ–º",
    "üé∑ –ü–æ–¥–∫–∞—Å—Ç –∞–±–æ YouTube-–∫–∞–Ω–∞–ª",
    "üéØ –©–æ–¥–µ–Ω–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è",
    "üßµ –ö–æ—Ä–æ—Ç–∫–∞ —ñ—Å—Ç–æ—Ä—ñ—è",
    "üí≠ –¢–µ–º–∞ –¥–Ω—è",
    "–†–µ—Ü–µ–ø—Ç –¥–ª—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è",
]

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
def send_random_post(chat_id):
    content = random.choice(content_list)
    response = requests.post(TELEGRAM_API_URL, json={"chat_id": chat_id, "text": content})
    print(f"[‚úâÔ∏è] {datetime.datetime.now()} –ü–æ—Å—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {content}")

# –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
scheduler = BackgroundScheduler()

def schedule_user_message(chat_id, tz):
    scheduler.add_job(
        send_random_post,
        'cron',
        hour=10, minute=0,
        timezone=timezone(tz),
        args=[chat_id],
        id=str(chat_id),
        replace_existing=True
    )

scheduler.start()

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenRouter
def generate_response(user_input):
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "qwen/qwen3-32b:free",
        "messages": [{"role": "user", "content": user_input}]
    }
    response = requests.post(OPENROUTER_API_URL, headers=headers, data=json.dumps(data))
    if response.status_code == 200:
        res = response.json()
        return res["choices"][0]["message"]["content"]
    return "ü§ñ –í–∏–±–∞—á, –Ω–µ –∑–º—ñ–≥ –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å."

@app.route("/telegram", methods=["POST"])
def telegram_webhook():
    data = request.get_json()
    if not data or "message" not in data:
        return "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç", 400

    chat_id = data["message"]["chat"]["id"]
    text = data["message"].get("text", "")

    if chat_id not in user_data:
        tz = get_timezone_from_location(text)
        if tz:
            user_data[chat_id] = {"location": text, "timezone": tz}
            schedule_user_message(chat_id, tz)
            reply = f"‚úÖ –©–æ–¥–µ–Ω–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–¥–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç–∏ –æ 10:00 ({tz})"
        else:
            reply = "üåç –í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ –∞–±–æ –∫—Ä–∞—ó–Ω–∏ –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏."
    else:
        reply = generate_response(text)

    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞
    keyboard = {
        "keyboard": [
            [{"text": "üé≤ –°—é—Ä–ø—Ä–∏–∑"}, {"text": "üé¨ –§—ñ–ª—å–º"}],
            [{"text": "üé∑ –ú—É–∑–∏–∫–∞"}]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": False
    }

    requests.post(TELEGRAM_API_URL, json={
        "chat_id": chat_id,
        "text": reply,
        "reply_markup": keyboard
    })

    return "OK", 200

def get_timezone_from_location(location_name):
    location = geolocator.geocode(location_name)
    if location:
        return tf.timezone_at(lng=location.longitude, lat=location.latitude)
    return None

@app.route("/")
def home():
    return "‚úÖ SurpriseBot –ø—Ä–∞—Ü—é—î!"

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
