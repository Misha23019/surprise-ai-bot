from flask import Flask, request
from dotenv import load_dotenv
import os
from modules.router import generate_response
from modules.telegram import send_message, build_keyboard
from modules.scheduler import start_scheduler
from modules.limits import check_limit, increment_limit
from modules.lang import get_user_lang, set_user_lang, LANGUAGES

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

if not TELEGRAM_TOKEN:
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

app = Flask(__name__)

@app.route("/")
def home():
    return "‚úÖ SurpriseBot –ø—Ä–∞—Ü—é—î!"

@app.route("/telegram", methods=["POST"])
def telegram_webhook():
    data = request.get_json()

    if not data or "message" not in data:
        return "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç", 400

    chat_id = str(data["message"]["chat"]["id"])
    user_input = data["message"].get("text", "")

    if user_input.startswith("/lang"):
        parts = user_input.split()
        if len(parts) == 2 and parts[1] in LANGUAGES:
            set_user_lang(chat_id, parts[1])
            send_message(chat_id, f"‚úÖ –ú–æ–≤–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞ {LANGUAGES[parts[1]]}", TELEGRAM_TOKEN)
        else:
            langs_list = "\n".join([f"{k} - {v}" for k, v in LANGUAGES.items()])
            send_message(chat_id, "üåê –í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É (–ø—Ä–∏–∫–ª–∞–¥: /lang uk):\n" + langs_list, TELEGRAM_TOKEN)
        return "OK", 200

    if not check_limit(chat_id):
        send_message(chat_id, "‚ö†Ô∏è –í–∏ –¥–æ—Å—è–≥–ª–∏ –ª—ñ–º—ñ—Ç—É –≤ 5 –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –¥–µ–Ω—å. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞!", TELEGRAM_TOKEN)
        return "OK", 200

    lang = get_user_lang(chat_id)
    reply = generate_response(user_input, lang)
    increment_limit(chat_id)
    keyboard = build_keyboard(lang)
    send_message(chat_id, reply, TELEGRAM_TOKEN, keyboard)

    return "OK", 200

if __name__ == "__main__":
    start_scheduler()
    app.run(host="0.0.0.0", port=10000)

# üìÅ requirements.txt
flask
requests
python-dotenv
apscheduler

# üìÅ README.md

# Surprise Me! Telegram Bot

#üéâ –ë–æ—Ç, —â–æ —â–æ–¥–Ω—è –Ω–∞–¥—Å–∏–ª–∞—î —Å—é—Ä–ø—Ä–∏–∑–∏: —Ñ—ñ–ª—å–º–∏, –º—É–∑–∏–∫—É, –º–∏—Å—Ç–µ—Ü—Ç–≤–æ, —Ñ–∞–∫—Ç–∏ —Ç–æ—â–æ.

## ‚ú® –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å
- üöÄ –©–æ–¥–µ–Ω–Ω—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –ø–æ—Å—Ç–∏
- ü§ì –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π —á–µ—Ä–µ–∑ OpenRouter
- ‚ö†Ô∏è –û–±–º–µ–∂–µ–Ω–Ω—è: 5 –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –¥–µ–Ω—å
- üåê –ú—É–ª—å—Ç–∏–º–æ–≤–Ω—ñ—Å—Ç—å (25+ –º–æ–≤)
- ‚å®–ø –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É: `/lang uk`, `/lang en` —Ç–æ—â–æ

## üìä –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó
- Flask + Telegram Webhook
- OpenRouter API (LLM)
- APScheduler –¥–ª—è –∞–≤—Ç–æ-—Ä–æ–∑—Å–∏–ª–∫–∏

## üîç –ü—Ä–∏–∫–ª–∞–¥ .env
```
TELEGRAM_TOKEN=—Ç—É—Ç_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞
OPENROUTER_API_KEY=—Ç—É—Ç_–∫–ª—é—á_OpenRouter
```

## üöÄ –î–µ–ø–ª–æ–π –Ω–∞ Render
- –ó–∞–≤–∞–Ω—Ç–∞–∂ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –Ω–∞ GitHub
- –°—Ç–≤–æ—Ä–∏ Web Service –Ω–∞ https://render.com
- Build Command: `pip install -r requirements.txt`
- Start Command: `python app.py`
- –î–æ–¥–∞–π ENV:
  - TELEGRAM_TOKEN
  - OPENROUTER_API_KEY
