from modules.gpt_api import generate_gpt_response
from modules.limits import check_limit, increment_manual
from modules.lang import get_user_lang
import logging

def handle_message(chat_id, text):
    lang = get_user_lang(chat_id) or "uk"
    text_lower = text.lower()

    # –ö–æ–º–∞–Ω–¥—ã
    if text_lower == "/start":
        return (
            "üëã –í—ñ—Ç–∞—é! –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é —Ç–∏–ø—É /lang uk\n\n"
            "üåê –î–æ—Å—Ç—É–ø–Ω—ñ –º–æ–≤–∏:\n"
            + "\n".join([f"{k} - {v}" for k, v in sorted(lang.LANGUAGES.items())])
        )

    if text_lower.startswith("/lang"):
        parts = text_lower.split()
        if len(parts) == 2 and parts[1] in lang.LANGUAGES:
            lang.set_user_lang(chat_id, parts[1])
            return lang.get_text(parts[1])["language_changed"]
        else:
            return "–ù–µ–≤—ñ—Ä–Ω–∏–π –∫–æ–¥ –º–æ–≤–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."

    # –õ—ñ–º—ñ—Ç –Ω–∞ —Ä—É—á–Ω—ñ –∑–∞–ø–∏—Ç–∏
    if not check_limit(chat_id):
        return "‚ùå –í–∏ –¥–æ—Å—è–≥–ª–∏ —â–æ–¥–µ–Ω–Ω–æ–≥–æ –ª—ñ–º—ñ—Ç—É –∑–∞–ø–∏—Ç—ñ–≤ (5). –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞."

    # –ö–æ–º–∞–Ω–¥–∏ —Å—é—Ä–ø—Ä–∏–∑, —Ä–µ—Ü–µ–ø—Ç, —Ä–∞–Ω–¥–æ–º —Ç–∞ —ñ–Ω.
    if text_lower == "üé≤ —Å—é—Ä–ø—Ä–∏–∑" or text_lower == "/auto_surprise":
        prompt = "–ó–≥–µ–Ω–µ—Ä—É–π –∫–æ—Ä–æ—Ç–∫–∏–π, —Ü—ñ–∫–∞–≤–∏–π —Å—é—Ä–ø—Ä–∏–∑, —è–∫–∏–π –ø—ñ–¥–Ω—ñ–º–µ –Ω–∞—Å—Ç—Ä—ñ–π."
        response = generate_gpt_response(prompt, lang)
        increment_manual(chat_id)
        return response

    if text_lower == "üçΩÔ∏è —Ä–µ—Ü–µ–ø—Ç":
        return lang.get_text(lang)["ask_ingredients"]

    if text_lower.startswith("ü•¶") or "," in text_lower:  # —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏
        # –ë–µ—Ä–µ–º–æ —Ç–µ–∫—Å—Ç —è–∫ —Å–ø–∏—Å–æ–∫ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤
        ingredients = text
        prompt = f"–ë—É–¥—å –ª–∞—Å–∫–∞, —Å—Ç–≤–æ—Ä–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç —Å—Ç—Ä–∞–≤–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏: {ingredients}"
        response = generate_gpt_response(prompt, lang)
        increment_manual(chat_id)
        return response

    if text_lower == "üé¨ —Ñ—ñ–ª—å–º":
        prompt = "–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π —Ü—ñ–∫–∞–≤–∏–π —Ñ—ñ–ª—å–º –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É."
        response = generate_gpt_response(prompt, lang)
        increment_manual(chat_id)
        return response

    if text_lower == "üéµ –º—É–∑–∏–∫–∞":
        prompt = "–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π —Ö–æ—Ä–æ—à—É –ø—ñ—Å–Ω—é –∞–±–æ –∞–ª—å–±–æ–º –¥–ª—è –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è."
        response = generate_gpt_response(prompt, lang)
        increment_manual(chat_id)
        return response

    if text_lower == "üí¨ —Ü–∏—Ç–∞—Ç–∞":
        prompt = "–ù–∞–≤–µ–¥–∏ –Ω–∞–¥–∏—Ö–∞—é—á—É —Ü–∏—Ç–∞—Ç—É."
        response = generate_gpt_response(prompt, lang)
        increment_manual(chat_id)
        return response

    if text_lower == "üîÄ —Ä–∞–Ω–¥–æ–º":
        prompt = "–†–æ–∑–∫–∞–∂–∏ —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ —ñ –≤–∏–ø–∞–¥–∫–æ–≤–µ."
        response = generate_gpt_response(prompt, lang)
        increment_manual(chat_id)
        return response

    # –ü–æ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—é - –≤—ñ–¥–ø–æ–≤—ñ–¥—å —á–µ—Ä–µ–∑ GPT –Ω–∞ –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç
    response = generate_gpt_response(text, lang)
    increment_manual(chat_id)
    return response
