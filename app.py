from flask import Flask, request
from dotenv import load_dotenv
import os
import requests

from modules.router import handle_message
from modules.telegram import send_message, build_keyboard, build_lang_keyboard
from modules.scheduler import start_scheduler
from modules.limits import check_limit, increment_manual
from modules.lang import get_user_lang, set_user_lang, LANGUAGES, get_user_time, set_user_time

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

if not TELEGRAM_TOKEN:
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ .env")

app = Flask(__name__)

@app.route("/")
def home():
    return "‚úÖ SurpriseBot –ø—Ä–∞—Ü—é—î!"

@app.route("/telegram", methods=["POST"])
def telegram_webhook():
    data = request.get_json()

    if not data:
        return "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç", 400

    # –û–±—Ä–æ–±–∫–∞ callback_query (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫)
    if "callback_query" in data:
        callback = data["callback_query"]
        chat_id = str(callback["from"]["id"])
        data_str = callback.get("data", "")

        if data_str.startswith("set_lang_"):
            lang_code = data_str.replace("set_lang_", "")
            if lang_code in LANGUAGES:
                set_user_lang(chat_id, lang_code)
                send_message(chat_id, f"‚úÖ –ú–æ–≤–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞ {LANGUAGES[lang_code]}", TELEGRAM_TOKEN)
            else:
                send_message(chat_id, "‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –º–æ–≤–∞", TELEGRAM_TOKEN)

            # –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ callback_query, —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ "loading"
            requests.post(
                f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/answerCallbackQuery",
                json={"callback_query_id": callback.get("id")}
            )
            return "OK", 200

    # –û–±—Ä–æ–±–∫–∞ –∑–≤–∏—á–∞–π–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    if "message" not in data:
        return "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç", 400

    message = data["message"]
    chat_id = str(message["chat"]["id"])
    user_input = message.get("text", "").strip()
    lang = get_user_lang(chat_id)
    user_time = get_user_time(chat_id)

    # –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –º–æ–≤
    if user_input.startswith("/start"):
        send_message(
            chat_id,
            "üëã –í—ñ—Ç–∞—é! –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:",
            TELEGRAM_TOKEN,
            keyboard=build_lang_keyboard()
        )
        return "OK", 200

    # –ö–æ–º–∞–Ω–¥–∞ /lang ‚Äî –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–≤–∏ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±)
    if user_input.startswith("/lang"):
        parts = user_input.split()
        if len(parts) == 2 and parts[1] in LANGUAGES:
            set_user_lang(chat_id, parts[1])
            send_message(
                chat_id,
                f"‚úÖ –ú–æ–≤–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞ {LANGUAGES[parts[1]]}\n‚åö –í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–• (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 09:30), —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å—é—Ä–ø—Ä–∏–∑ –æ 10:00",
                TELEGRAM_TOKEN
            )
        else:
            langs_list = "\n".join([f"{k} - {v}" for k, v in LANGUAGES.items()])
            send_message(
                chat_id,
                "üåê –í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É (–ø—Ä–∏–∫–ª–∞–¥: /lang uk):\n" + langs_list,
                TELEGRAM_TOKEN
            )
        return "OK", 200

    # –Ø–∫—â–æ –º–æ–≤—É —â–µ –Ω–µ –æ–±—Ä–∞–Ω–æ
    if not lang:
        send_message(chat_id, "üåê –°–ø–æ—á–∞—Ç–∫—É –æ–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é —Ç–∏–ø—É /start", TELEGRAM_TOKEN)
        return "OK", 200

    # –Ø–∫—â–æ —á–∞—Å —â–µ –Ω–µ –∑–∞–¥–∞–Ω–∏–π
    if not user_time:
        if ":" in user_input:
            # –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∞—Ç—É —á–∞—Å—É –ì–ì:–•–• (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 09:30)
            time_parts = user_input.split(":")
            if len(time_parts) == 2 and all(p.isdigit() for p in time_parts):
                hours, minutes = map(int, time_parts)
                if 0 <= hours <= 23 and 0 <= minutes <= 59:
                    set_user_time(chat_id, user_input)
                    send_message(chat_id, "‚úÖ –ß–∞—Å –∑–±–µ—Ä–µ–∂–µ–Ω–æ! –û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π –Ω–∏–∂—á–µ:", TELEGRAM_TOKEN, build_keyboard(lang))
                    return "OK", 200

            send_message(chat_id, "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å—É. –í–≤–µ–¥—ñ—Ç—å —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–• (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 09:30)", TELEGRAM_TOKEN)
        else:
            send_message(chat_id, "‚åö –í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–• (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 09:30)", TELEGRAM_TOKEN)
        return "OK", 200

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª—ñ–º—ñ—Ç—É
    if not check_limit(chat_id):
        send_message(chat_id, "‚ö†Ô∏è –í–∏ –¥–æ—Å—è–≥–ª–∏ –ª—ñ–º—ñ—Ç—É –≤ 5 –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –¥–µ–Ω—å. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞!", TELEGRAM_TOKEN)
        return "OK", 200

    # –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞
    reply = handle_message(chat_id, user_input)
    increment_manual(chat_id)
    send_message(chat_id, reply, TELEGRAM_TOKEN, build_keyboard(lang))

    return "OK", 200


if __name__ == "__main__":
    start_scheduler()
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
