### app.py ###

from flask import Flask, request
from dotenv import load_dotenv
import os
from modules.router import generate_response
from modules.telegram import send_message, build_keyboard, build_inline_settings_keyboard
from modules.scheduler import start_scheduler
from modules.limits import check_limit, increment_limit
from modules.lang import get_user_lang, set_user_lang, LANGUAGES, get_user_time, set_user_time, get_text
import re

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

app = Flask(__name__)

TIME_PATTERN = re.compile(r"^(?:[01]\d|2[0-3]):[0-5]\d$")  # –§–æ—Ä–º–∞—Ç HH:MM

@app.route("/")
def home():
    return "‚úÖ SurpriseBot –ø—Ä–∞—Ü—é—î!"

@app.route("/telegram", methods=["POST"])
def telegram_webhook():
    data = request.get_json()

    if not data:
        return "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç", 400

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback_query –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫ (—Å–º–µ–Ω–∞ —è–∑—ã–∫–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏)
    if "callback_query" in data:
        callback = data["callback_query"]
        chat_id = str(callback["message"]["chat"]["id"])
        lang = get_user_lang(chat_id)
        data_cb = callback["data"]

        if data_cb == "change_lang":
            langs_list = "\n".join([f"{k} - {v}" for k, v in LANGUAGES.items()])
            send_message(chat_id, f"üåê –í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É (–ø—Ä–∏–∫–ª–∞–¥: /lang uk):\n{langs_list}", TELEGRAM_TOKEN)
            # –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ state, —á—Ç–æ–±—ã –∂–¥–∞—Ç—å –≤–≤–æ–¥–∞ /lang ...
            return "OK", 200

        elif data_cb == "change_time":
            t = get_text(lang)
            send_message(chat_id, t["ask_time"], TELEGRAM_TOKEN)
            # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –º–æ–∂–Ω–æ –∂–¥–∞—Ç—å –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            return "OK", 200

        return "OK", 200

    if "message" not in data:
        return "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç", 400

    message = data["message"]
    chat_id = str(message["chat"]["id"])
    user_input = message.get("text", "").strip()

    lang = get_user_lang(chat_id)
    user_time = get_user_time(chat_id)

    if user_input.startswith("/start"):
        langs_list = "\n".join([f"{k} - {v}" for k, v in LANGUAGES.items()])
        send_message(chat_id, f"üëã –í—ñ—Ç–∞—é! –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é —Ç–∏–ø—É /lang uk\n\nüåê –î–æ—Å—Ç—É–ø–Ω—ñ –º–æ–≤–∏:\n{langs_list}", TELEGRAM_TOKEN)
        return "OK", 200

    if user_input.startswith("/lang"):
        parts = user_input.split()
        if len(parts) == 2 and parts[1] in LANGUAGES:
            set_user_lang(chat_id, parts[1])
            t = get_text(parts[1])
            send_message(chat_id, f"‚úÖ {t['language_changed']}\n{t['ask_time']}", TELEGRAM_TOKEN)
        else:
            langs_list = "\n".join([f"{k} - {v}" for k, v in LANGUAGES.items()])
            send_message(chat_id, "üåê –í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É (–ø—Ä–∏–∫–ª–∞–¥: /lang uk):\n" + langs_list, TELEGRAM_TOKEN)
        return "OK", 200

    if not lang:
        send_message(chat_id, "üåê –°–ø–æ—á–∞—Ç–∫—É –æ–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é —Ç–∏–ø—É /lang uk", TELEGRAM_TOKEN)
        return "OK", 200

    if not user_time:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
        if TIME_PATTERN.match(user_input):
            set_user_time(chat_id, user_input)
            t = get_text(lang)
            send_message(chat_id, "‚úÖ " + t["ask_time"], TELEGRAM_TOKEN)
            # –ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
            keyboard = build_keyboard(lang)
            send_message(chat_id, "–û–±–∏—Ä–∞–π—Ç–µ –æ–ø—Ü—ñ—é:", TELEGRAM_TOKEN, keyboard)
        else:
            t = get_text(lang)
            send_message(chat_id, t["ask_time"], TELEGRAM_TOKEN)
        return "OK", 200

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
    if not check_limit(chat_id):
        send_message(chat_id, "‚ö†Ô∏è –í–∏ –¥–æ—Å—è–≥–ª–∏ –ª—ñ–º—ñ—Ç—É –≤ 5 –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –¥–µ–Ω—å. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞!", TELEGRAM_TOKEN)
        return "OK", 200

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ
    reply = generate_response(user_input, lang)
    increment_limit(chat_id)
    keyboard = build_keyboard(lang)
    send_message(chat_id, reply, TELEGRAM_TOKEN, keyboard)

    return "OK", 200

if __name__ == "__main__":
    start_scheduler()
    app.run(host="0.0.0.0", port=10000)
